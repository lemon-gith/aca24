sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 2
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 44.74
Branch Predictor Power Consumption: 4.52313  (10.6%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.176835  (0.414%)
 Instruction Decode Power (W): 0.00799577
 RAT decode_power (W): 0.0567572
 RAT wordline_power (W): 0.0144561
 RAT bitline_power (W): 0.0958077
 DCL Comparators (W): 0.00181792
Instruction Window Power Consumption: 0.849701  (1.99%)
 tagdrive (W): 0.0428745
 tagmatch (W): 0.0160167
 Selection Logic (W): 0.00671084
 decode_power (W): 0.0266252
 wordline_power (W): 0.0272771
 bitline_power (W): 0.730197
Load/Store Queue Power Consumption: 0.96318  (2.25%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 1.30831  (3.06%)
 decode_power (W): 0.0567572
 wordline_power (W): 0.0272771
 bitline_power (W): 1.22428
Result Bus Power Consumption: 0.593218  (1.39%)
Total Clock Power: 15.2305  (35.6%)
Int ALU Power: 2.33007  (5.45%)
FP ALU Power: 3.57026  (8.35%)
Instruction Cache Power Consumption: 2.55583  (5.98%)
 decode_power (W): 0.724888
 wordline_power (W): 0.057312
 bitline_power (W): 1.14691
 senseamp_power (W): 0.192
 tagarray_power (W): 0.434717
Itlb_power (W): 0.27086 (0.634%)
Data Cache Power Consumption: 5.21484  (12.2%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.8867
Dtlb_power (W): 0.927016 (2.17%)
Level 2 Cache Power Consumption: 4.22625 (9.89%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.548589
sim: command line: /homes/phjk/simplesim-wattch/sim-outorder -res:fpalu 1 -res:ialu 2 -res:imult 2 -issue:width 2 -decode:width 2 -fetch:ifqsize 2 ./splaytest.ss 3 100000 100000 100000 3 

sim: simulation started @ Fri Nov 10 15:56:38 2023, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              2 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                  bimod # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               2 # instruction decode B/W (insts/cycle)
-issue:width                2 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   2 # total number of integer ALU's available
-res:imult                  2 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  1 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **
Performing 100000 insertions with keys generated by random walk
Insertions: 17207942 microseconds
Performing 100000 queries
Queries: 13484782 microseconds, 134.847820 microseconds/query
number_of_matches = 100000

sim: ** simulation statistics **
sim_num_insn               37731411 # total number of instructions committed
sim_num_refs               15998322 # total number of loads and stores committed
sim_num_loads               9817156 # total number of loads committed
sim_num_stores         6181166.0000 # total number of stores committed
sim_num_branches            8590005 # total number of branches committed
sim_elapsed_time                 31 # total simulation time in seconds
sim_inst_rate          1217142.2903 # simulation speed (in insts/sec)
sim_total_insn             43234777 # total number of instructions executed
sim_total_refs             18049878 # total number of loads and stores executed
sim_total_loads            11121793 # total number of loads executed
sim_total_stores       6928085.0000 # total number of stores executed
sim_total_branches         10040657 # total number of branches executed
sim_cycle                  37386585 # total simulation time in cycles
sim_IPC                      1.0092 # instructions per cycle
sim_CPI                      0.9909 # cycles per instruction
sim_exec_BW                  1.1564 # total instructions (mis-spec + committed) per cycle
sim_IPB                      4.3925 # instruction per branch
IFQ_count                  67537910 # cumulative IFQ occupancy
IFQ_fcount                 32298631 # cumulative IFQ full count
ifq_occupancy                1.8065 # avg IFQ occupancy (insn's)
ifq_rate                     1.1564 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.5621 # avg IFQ occupant latency (cycle's)
ifq_full                     0.8639 # fraction of time (cycle's) IFQ was full
RUU_count                 441756253 # cumulative RUU occupancy
RUU_fcount                 12449250 # cumulative RUU full count
ruu_occupancy               11.8159 # avg RUU occupancy (insn's)
ruu_rate                     1.1564 # avg RUU dispatch rate (insn/cycle)
ruu_latency                 10.2176 # avg RUU occupant latency (cycle's)
ruu_full                     0.3330 # fraction of time (cycle's) RUU was full
LSQ_count                 148623829 # cumulative LSQ occupancy
LSQ_fcount                  5325200 # cumulative LSQ full count
lsq_occupancy                3.9753 # avg LSQ occupancy (insn's)
lsq_rate                     1.1564 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  3.4376 # avg LSQ occupant latency (cycle's)
lsq_full                     0.1424 # fraction of time (cycle's) LSQ was full
sim_slip                  612531382 # total number of slip cycles
avg_sim_slip                16.2340 # the average slip between issue and retirement
bpred_bimod.lookups        10380074 # total number of bpred lookups
bpred_bimod.updates         8590005 # total number of updates
bpred_bimod.addr_hits       7887125 # total number of address-predicted hits
bpred_bimod.dir_hits        7887505 # total number of direction-predicted hits (includes addr-hits)
bpred_bimod.misses           702500 # total number of misses
bpred_bimod.jr_hits          968532 # total number of address-predicted hits for JR's
bpred_bimod.jr_seen          968590 # total number of JR's seen
bpred_bimod.jr_non_ras_hits.PP            1 # total number of address-predicted hits for non-RAS JR's
bpred_bimod.jr_non_ras_seen.PP            9 # total number of non-RAS JR's seen
bpred_bimod.bpred_addr_rate    0.9182 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_bimod.bpred_dir_rate    0.9182 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_bimod.bpred_jr_rate    0.9999 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_bimod.bpred_jr_non_ras_rate.PP    0.1111 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_bimod.retstack_pushes      1121870 # total number of address pushed onto ret-addr stack
bpred_bimod.retstack_pops       988422 # total number of address popped off of ret-addr stack
bpred_bimod.used_ras.PP       968581 # total number of RAS predictions used
bpred_bimod.ras_hits.PP       968531 # total number of RAS hits
bpred_bimod.ras_rate.PP    0.9999 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses               44484402 # total number of accesses
il1.hits                   44480330 # total number of hits
il1.misses                     4072 # total number of misses
il1.replacements               3585 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0001 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0001 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               16067458 # total number of accesses
dl1.hits                   16065510 # total number of hits
dl1.misses                     1948 # total number of misses
dl1.replacements               1436 # total number of replacements
dl1.writebacks                 1411 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0001 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0001 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0001 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                   7431 # total number of accesses
ul2.hits                       6027 # total number of hits
ul2.misses                     1404 # total number of misses
ul2.replacements                  0 # total number of replacements
ul2.writebacks                    0 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.1889 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              44484402 # total number of accesses
itlb.hits                  44484381 # total number of hits
itlb.misses                      21 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses              16067734 # total number of accesses
dtlb.hits                  16067719 # total number of hits
dtlb.misses                      15 # total number of misses
dtlb.replacements                 0 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           6611243.9997 # total power usage of rename unit
bpred_power            169104249.4006 # total power usage of bpred unit
window_power           31767427.5283 # total power usage of instruction window
lsq_power              36010010.4670 # total power usage of load/store queue
regfile_power          48913280.6322 # total power usage of arch. regfile
icache_power           105680316.7583 # total power usage of icache
dcache_power           229623131.1244 # total power usage of dcache
dcache2_power          158005087.5696 # total power usage of dcache2
alu_power              220593056.8106 # total power usage of alu
falu_power             133479875.2868 # total power usage of falu
resultbus_power        22178396.6781 # total power usage of resultbus
clock_power            569414957.5996 # total power usage of clock
avg_rename_power             0.1768 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             0.8497 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            1.3083 # avg power usage of arch. regfile
avg_icache_power             2.8267 # avg power usage of icache
avg_dcache_power             6.1419 # avg power usage of dcache
avg_dcache2_power            4.2263 # avg power usage of dcache2
avg_alu_power                5.9003 # avg power usage of alu
avg_falu_power               3.5703 # avg power usage of falu
avg_resultbus_power          0.5932 # avg power usage of resultbus
avg_clock_power             15.2305 # avg power usage of clock
fetch_stage_power      274784566.1588 # total power usage of fetch stage
dispatch_stage_power   6611243.9997 # total power usage of dispatch stage
issue_stage_power      698177110.1780 # total power usage of issue stage
avg_fetch_power              7.3498 # average power of fetch unit per cycle
avg_dispatch_power           0.1768 # average power of dispatch unit per cycle
avg_issue_power             18.6745 # average power of issue unit per cycle
total_power            1597901158.5683 # total power per cycle
avg_total_power_cycle       42.7400 # average total power per cycle
avg_total_power_cycle_nofp_nod2      34.9434 # average total power per cycle
avg_total_power_insn        36.9587 # average total power per insn
avg_total_power_insn_nofp_nod2      30.2168 # average total power per insn
rename_power_cc1       4407393.6127 # total power usage of rename unit_cc1
bpred_power_cc1        29525772.7490 # total power usage of bpred unit_cc1
window_power_cc1       27097267.7783 # total power usage of instruction window_cc1
lsq_power_cc1          6021707.4594 # total power usage of lsq_cc1
regfile_power_cc1      29819934.3138 # total power usage of arch. regfile_cc1
icache_power_cc1       72754623.4904 # total power usage of icache_cc1
dcache_power_cc1       75699010.1891 # total power usage of dcache_cc1
dcache2_power_cc1        25423.0121 # total power usage of dcache2_cc1
alu_power_cc1          54658373.4120 # total power usage of alu_cc1
resultbus_power_cc1    14618207.9083 # total power usage of resultbus_cc1
clock_power_cc1        206298422.6269 # total power usage of clock_cc1
avg_rename_power_cc1         0.1179 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.7897 # avg power usage of bpred unit_cc1
avg_window_power_cc1         0.7248 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1611 # avg power usage of lsq_cc1
avg_regfile_power_cc1        0.7976 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.9460 # avg power usage of icache_cc1
avg_dcache_power_cc1         2.0248 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0007 # avg power usage of dcache2_cc1
avg_alu_power_cc1            1.4620 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.3910 # avg power usage of resultbus_cc1
avg_clock_power_cc1          5.5180 # avg power usage of clock_cc1
fetch_stage_power_cc1  102280396.2395 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 4407393.6127 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  178119989.7593 # total power usage of issue stage_cc1
avg_fetch_power_cc1          2.7358 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.1179 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          4.7643 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  520926136.5521 # total power per cycle_cc1
avg_total_power_cycle_cc1      13.9335 # average total power per cycle_cc1
avg_total_power_insn_cc1      12.0488 # average total power per insn_cc1
rename_power_cc2       3822682.3865 # total power usage of rename unit_cc2
bpred_power_cc2        19426839.1789 # total power usage of bpred unit_cc2
window_power_cc2       25058442.1707 # total power usage of instruction window_cc2
lsq_power_cc2          3697739.5214 # total power usage of lsq_cc2
regfile_power_cc2      5268650.3312 # total power usage of arch. regfile_cc2
icache_power_cc2       72754623.4904 # total power usage of icache_cc2
dcache_power_cc2       49342030.2281 # total power usage of dcache_cc2
dcache2_power_cc2        15702.6351 # total power usage of dcache2_cc2
alu_power_cc2          42617833.5700 # total power usage of alu_cc2
resultbus_power_cc2    11593397.2594 # total power usage of resultbus_cc2
clock_power_cc2        152890646.1586 # total power usage of clock_cc2
avg_rename_power_cc2         0.1022 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.5196 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.6703 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0989 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.1409 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.9460 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.3198 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0004 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.1399 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.3101 # avg power usage of resultbus_cc2
avg_clock_power_cc2          4.0895 # avg power usage of clock_cc2
fetch_stage_power_cc2  92181462.6694 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 3822682.3865 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  132325145.3847 # total power usage of issue stage_cc2
avg_fetch_power_cc2          2.4656 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1022 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          3.5394 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  386488586.9304 # total power per cycle_cc2
avg_total_power_cycle_cc2      10.3376 # average total power per cycle_cc2
avg_total_power_insn_cc2       8.9393 # average total power per insn_cc2
rename_power_cc3       4043067.4260 # total power usage of rename unit_cc3
bpred_power_cc3        33400046.2715 # total power usage of bpred unit_cc3
window_power_cc3       25754028.1815 # total power usage of instruction window_cc3
lsq_power_cc3          6650866.8019 # total power usage of lsq_cc3
regfile_power_cc3      6920833.0936 # total power usage of arch. regfile_cc3
icache_power_cc3       76047192.8156 # total power usage of icache_cc3
dcache_power_cc3       64764980.5406 # total power usage of dcache_cc3
dcache2_power_cc3      15813709.8667 # total power usage of dcache2_cc3
alu_power_cc3          59211301.8878 # total power usage of alu_cc3
resultbus_power_cc3    12330582.1987 # total power usage of resultbus_cc3
clock_power_cc3        189180385.4781 # total power usage of clock_cc3
avg_rename_power_cc3         0.1081 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.8934 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.6889 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1779 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.1851 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         2.0341 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.7323 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4230 # avg power usage of dcache2_cc3
avg_alu_power_cc3            1.5838 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.3298 # avg power usage of resultbus_cc3
avg_clock_power_cc3          5.0601 # avg power usage of clock_cc3
fetch_stage_power_cc3  109447239.0871 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 4043067.4260 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  184525469.4772 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.9274 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1081 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          4.9356 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  494116994.5619 # total power per cycle_cc3
avg_total_power_cycle_cc3      13.2164 # average total power per cycle_cc3
avg_total_power_insn_cc3      11.4287 # average total power per insn_cc3
total_rename_access        43234538 # total number accesses of rename unit
total_bpred_access          8590005 # total number accesses of bpred unit
total_window_access       150883424 # total number accesses of instruction window
total_lsq_access           16068670 # total number accesses of load/store queue
total_regfile_access       53208562 # total number accesses of arch. regfile
total_icache_access        44484664 # total number accesses of icache
total_dcache_access        16067458 # total number accesses of dcache
total_dcache2_access           7431 # total number accesses of dcache2
total_alu_access           36580797 # total number accesses of alu
total_resultbus_access     39591829 # total number accesses of resultbus
avg_rename_access            1.1564 # avg number accesses of rename unit
avg_bpred_access             0.2298 # avg number accesses of bpred unit
avg_window_access            4.0358 # avg number accesses of instruction window
avg_lsq_access               0.4298 # avg number accesses of lsq
avg_regfile_access           1.4232 # avg number accesses of arch. regfile
avg_icache_access            1.1899 # avg number accesses of icache
avg_dcache_access            0.4298 # avg number accesses of dcache
avg_dcache2_access           0.0002 # avg number accesses of dcache2
avg_alu_access               0.9784 # avg number accesses of alu
avg_resultbus_access         1.0590 # avg number accesses of resultbus
max_rename_access                 2 # max number accesses of rename unit
max_bpred_access                  4 # max number accesses of bpred unit
max_window_access                 9 # max number accesses of instruction window
max_lsq_access                    4 # max number accesses of load/store queue
max_regfile_access                8 # max number accesses of arch. regfile
max_icache_access                 2 # max number accesses of icache
max_dcache_access                 3 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    2 # max number accesses of alu
max_resultbus_access              7 # max number accesses of resultbus
max_cycle_power_cc1         27.8680 # maximum cycle power usage of cc1
max_cycle_power_cc2         24.3538 # maximum cycle power usage of cc2
max_cycle_power_cc3         26.0836 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                  82768 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                   9092 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   36 # total number of pages allocated
mem.page_mem                   144k # total size of memory pages allocated
mem.ptab_misses                  36 # total first level page table misses
mem.ptab_accesses         308673222 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate


Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 4
  Block Size (bytes): 8

Access Time: 9.27925e-09
Cycle Time:  1.09081e-08

Best Ndwl (L1): 8
Best Ndbl (L1): 1
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 8.44162
 tag side (ns): 8.55667
 decode_data (ns): 5.29318
 wordline_data (ns): 1.03507
 bitline_data (ns): 0.810785
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.37065
 wordline_tag (ns): 1.36749
 bitline_tag (ns): 0.158246
 sense_amp_tag (ns): 0.26
 compare (ns): 2.42991
 mux driver (ns): 1.6125
 sel inverter (ns): 0.357877
 data output driver (ns): 0.722579
 total data path (with output driver) (ns): 7.71904
 total tag path is set assoc (ns): 8.55667
 precharge time (ns): 1.6289

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 1
  Block Size (bytes): 32

Access Time: 6.15176e-09
Cycle Time:  8.05494e-09

Best Ndwl (L1): 2
Best Ndbl (L1): 4
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 2

Time Components:
 data side (with Output driver) (ns): 6.14931
 tag side (ns): 6.15176
 decode_data (ns): 3.35254
 wordline_data (ns): 1.30935
 bitline_data (ns): 0.184839
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.84499
 wordline_tag (ns): 0.847457
 bitline_tag (ns): 0.250732
 sense_amp_tag (ns): 0.26
 compare (ns): 2.36506
 valid signal driver (ns): 0.583518
 data output driver (ns): 0.722579
 total data path (with output driver) (ns): 5.42673
 total tag path is dm (ns): 6.15176
 precharge time (ns): 1.90318

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 128
  Associativity: 4
  Block Size (bytes): 32

Access Time: 9.14093e-09
Cycle Time:  1.11718e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 6.05114
 tag side (ns): 7.98848
 decode_data (ns): 2.92572
 wordline_data (ns): 1.437
 bitline_data (ns): -0.0440331
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.46851
 wordline_tag (ns): 1.27791
 bitline_tag (ns): -0.0315811
 sense_amp_tag (ns): 0.26
 compare (ns): 2.29478
 mux driver (ns): 2.37376
 sel inverter (ns): 0.345094
 data output driver (ns): 1.15245
 total data path (with output driver) (ns): 4.89869
 total tag path is set assoc (ns): 7.98848
 precharge time (ns): 2.03083

Cache Parameters:
  Size in bytes: 262144
  Number of sets: 1024
  Associativity: 4
  Block Size (bytes): 64

Access Time: 1.44948e-08
Cycle Time:  1.76863e-08

Best Ndwl (L1): 2
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 11.3269
 tag side (ns): 12.2049
 decode_data (ns): 4.99158
 wordline_data (ns): 2.59771
 bitline_data (ns): 0.867749
 sense_amp_data (ns): 0.58
 decode_tag (ns): 4.52586
 wordline_tag (ns): 1.24192
 bitline_tag (ns): 0.46158
 sense_amp_tag (ns): 0.26
 compare (ns): 2.17054
 mux driver (ns): 3.21212
 sel inverter (ns): 0.332908
 data output driver (ns): 2.28987
 total data path (with output driver) (ns): 9.03704
 total tag path is set assoc (ns): 12.2049
 precharge time (ns): 3.19154
